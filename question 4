#include <stdio.h>
#include <string.h>
#include <ctype.h>
void polyalphabeticSubstitution(char *plaintext, char *key) {
    int keyLength = strlen(key);
    int plaintextLength = strlen(plaintext);
    for (int i = 0; i < plaintextLength; i++) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            int keyIndex = i % keyLength;
            int shift = tolower(key[keyIndex]) - 'a';
            char encryptedChar = ((tolower(plaintext[i]) - 'a' + shift) % 26) + base;
            if (isupper(plaintext[i])) {
                encryptedChar = toupper(encryptedChar);
            }
            plaintext[i] = encryptedChar;
        }
    }
}
int main() {
    char plaintext[100];
    char key[100];
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';
    polyalphabeticSubstitution(plaintext, key);
    printf("Encrypted text: %s\n", plaintext);
}
